# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

def solution(k, m, score):
  sorted_score = sorted(score, reverse = True)

  profit = 0
  result = [sorted_score[i * m:(i + 1) * m] for i in range((len(sorted_score) + m - 1) // m)] 
  
  for i in result:
    if (len(i)==m):
      profit += min(i)*m
  return profit

print(solution(3,4,[1, 2, 3, 1, 2, 3, 1]))
print(solution(4,3,[4, 1, 2, 2, 4, 4, 4, 4, 1, 2, 4, 2]))

#다른 사람의 풀이1.
def solution(k, m, score):
    return sum(sorted(score)[len(score)%m::m])*m
#len(score)%m::m 이렇게 정리할 생각을 못했네...ㅠ

#다른 사람의 풀이2
solution = lambda _, m, s: sum(sorted(s)[-m::-m]) * m

#다른 사람의 풀이3
def solution(k, m, score):
    result = 0
    score.sort(reverse = True)
    for i in range(m - 1, len(score), m):
        result += score[i] * m

    return result