# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

#길이가 5이하의 모든 단어
#A,AA,AAA,AAAA,AAAAA,~ ,UUUUU
from itertools import product
def solution(word):
  #사전 정의, 중복 순열
  alpha_list = ['A', 'E', 'I', 'O', 'U']; diction_list=[]; new_diction_list = [];
  for i in range(1,6): 
    diction_list.extend(list(''.join(i) for i in list(product(alpha_list, repeat=i))))
  #정렬을 위해 5자리로 맞추고 거기에 0채우기 -> 아스키코드로 0이 A보다 작으니까 정렬하기 편함
  new_diction_list.extend(list( "{0:0<5}".format(i) for i in diction_list))
  
  #정렬하기..A,AA,AAA,AAAA,AAAAA,~ ,UUUUU
  new_diction_list.sort(key=lambda x : (x*5))
  #print(new_diction_list)
  #word도 공백에 0 채워서 사전에 있는 요소로 만들어준 다음에 인덱스 찾기..
  return(new_diction_list.index("{0:0<5}".format(word))+1) #인덱스는 0부터 시작하니까 1 더해주기

print(solution("AAAAE"))
print(solution("AAAE"))
print(solution("I"))
print(solution("EIO"))

#다른 사람의 풀이..1
#아니 어떻게 한 줄이 가능한거야
#나랑 거의 비슷하지만 오름차순으로 정렬..그냥 오름차순으로만 하면 된거였는데 무슨 뻘짓을 한거지지
# from itertools import product

# solution = lambda word: sorted(["".join(c) for i in range(5) for c in product("AEIOU", repeat=i+1)]).index(word) + 1

#다른 사람의 풀이 2
#길이가 0이상 N이하인 문자열들의 개수의 일반항 a(N) 을 계산, 등비수열의 합 이용...
# def solution(word):
#     answer = 0
#     for i, n in enumerate(word):
#         answer += (5 ** (5 - i) - 1) / (5 - 1) * "AEIOU".index(n) + 1
#     return answer