# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

def solution(a, b, n):
  coke = n
  count_coke = 0
  while(True):
    if(coke < a):
      break
    elif(coke%a==0):
      count_coke += b*(coke//a)
      coke = b*(coke//a)
    else:
      count_coke += b*(coke//a)
      coke  = coke - a*(coke//a) +b*(coke//a)
  return count_coke
     
print(solution(2,1,20))
print(solution(3,1,20))

#다른 사람의 풀이1...화나네네
#a개만 팔고 b개를 받는 과정은 결국 a-b 개씩 병을 소비하는 것으로 생각, 
#첫번째 진행할 때는 a개만 소비되기 때문에, b만큼 못받음(-b), 
#그 조건을 먼저 계산 n-b 반복횟수는 n-b // (a-b) 여기에 받는 병수 b 곱한 것 
solution = lambda a, b, n: max(n - b, 0) // (a - b) * b

#다른 사람의 풀이2
def solution(a, b, n):
    answer = 0
    while n >= a:
        answer += (n // a) * b
        n = (n // a) * b + (n % a)
    return answer