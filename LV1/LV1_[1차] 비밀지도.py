# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

def solution(n, arr1, arr2): 
  new_bin_arr3 = []
  bin_arr1 = ['0'*(n-len(bin(i)[2:]))+bin(i)[2:] for i in arr1]
  bin_arr2 = ['0'*(n-len(bin(i)[2:]))+bin(i)[2:] for i in arr2]
  
  for i,j in zip(bin_arr1,bin_arr2):
    bin_str = ''
    for ele1,ele2 in zip(i,j):
      if((int(ele1) or int(ele2)) == 1):
        bin_str += '#'
      else:
        bin_str += ' '
    new_bin_arr3 .append(bin_str)
  return(new_bin_arr3)

print(solution(5,	[9, 20, 28, 18, 11],	[30, 1, 21, 17, 28])) 
print(solution(6,	[46, 33, 33 ,22, 31, 50],	[27 ,56, 19, 14, 14, 10])) 

#다른 사람 풀이1...
def solution(n, arr1, arr2):
    answer = []
    for i,j in zip(arr1,arr2):
        a12 = str(bin(i|j)[2:])
        a12=a12.rjust(n,'0')
        a12=a12.replace('1','#')
        a12=a12.replace('0',' ')
        answer.append(a12)
    return answer

#다른 사람의 풀이2.....
solution = lambda n, arr1, arr2: ([''.join(map(lambda x: '#' if x=='1' else ' ', "{0:b}".format(row).zfill(n))) for row in (a|b for a, b in zip(arr1, arr2))])

#다른 사람의 풀이3....
import re

def solution(n, arr1, arr2):
    answer = ["#"]*n
    for i in range(0, n):
        answer[i] = str(bin(arr1[i]|arr2[i]))[2:]
        answer[i] = re.sub('1', '#', '0'*(n-len(answer[i]))+answer[i])
        answer[i] = re.sub('0', ' ', answer[i])
    return answer