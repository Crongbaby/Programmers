# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

def solution(lottos, win_nums):
  Max_LOTTOS = len(set(lottos).intersection(set(win_nums)))+lottos.count(0)
  Min_LOTTOS = len(set(lottos).intersection(set(win_nums)))
  result = [Max_LOTTOS,Min_LOTTOS]

  for i in range(2):
    if result[i] >= 2:
      result[i] = 7 - result[i]
    else:
      result[i] = 6

  return result

print(solution([44, 1, 0, 0, 31, 25],[31, 10, 45, 1, 6, 19]))
print(solution([0, 0, 0, 0, 0, 0],[38, 19, 20, 40, 15, 25]))
print(solution([45, 4, 35, 20, 3, 9],[20, 9, 3, 45, 4, 35])) 

#다른 사람의 풀이1..나랑 비슷하지만 더 간단하게 구현함
def solution(lottos, win_nums):

    rank=[6,6,5,4,3,2,1]

    cnt_0 = lottos.count(0)
    ans = 0
    for x in win_nums:
        if x in lottos:
            ans += 1
    return rank[cnt_0 + ans],rank[ans]

#다른 사람의 풀이2...딕셔너리 사용하기..
def solution(lottos, win_nums):
    rank = {
        0: 6,
        1: 6,
        2: 5,
        3: 4,
        4: 3,
        5: 2,
        6: 1
    }
    return [rank[len(set(lottos) & set(win_nums)) + lottos.count(0)], rank[len(set(lottos) & set(win_nums))]]