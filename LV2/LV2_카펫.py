# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

def solution(brown, yellow): #가로x2+(세로-2)*2 = brown
  size = []
  for i in range(3,5000): #width
    for j in range(3,5000): #height
      if brown == (i*2)+(j*2-4) and i>=j: #가로 길이는 세로 길이와 같거나 큼
        if(i*j == brown+yellow):
          size.extend([i,j])
  return size

print(solution(10,2))
print(solution(8,1))
print(solution(24,24))

#다른 사람 풀이1 -> 둘레의 길이를 사용하는 건 비슷하지만 더 효율적임.
# def solution(brown, yellow):
#     for i in range(1, int(yellow**(1/2))+1):
#         if yellow % i == 0:
#             if 2*(i + yellow//i) == brown-4:
#                 return [yellow//i+2, i+2]

#다른 사람 풀이2 ->넓이로 접근하는 방법..
# def solution(brown, yellow):
#     mn = brown + yellow
#     for m in range(3, int(mn ** 0.5) + 1):
#         if mn % m == 0 and 2 * (mn // m + m - 2) == brown:
#             return [mn // m, m]