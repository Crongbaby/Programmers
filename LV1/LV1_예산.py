# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

def solution(d, budget):
  d.sort()
  if d[0] > budget: #한 부서도 못 주는 경우
      return 0
  elif sum(d) <= budget: #모든 부서 예산 분배 가능
      return len(d)

  for i in range(1,len(d)):
    if sum(d[:i]) < budget: #예산 안으로 들어오는 경우
      continue
    else:
      if sum(d[:i])==budget:
        return len(d[:i]) 
      else:
        return len(d[:i])-1
      break

print(solution([1,3,2,5,4],9)) #3
print(solution([2,2,3,3],10)) #4
print(solution([4],3)) #0
print(solution([1,1,1], 2)) #2

#다른 사람 풀이1...
#빼서 하는 경우도 있을 듯
def solution(d, budget):
    d.sort()
    while budget < sum(d):
        d.pop()
    return len(d)

#다른 사람의 풀이2....
#나랑 비슷하지만 훨씬 효율적인 코드, 예산에서 하나씩 부서별 예산을 뺀 값으로 판단
def solution(d, budget):
    d.sort()
    cnt = 0

    for i in d :
        budget -= i
        if budget < 0 :
               break
        cnt += 1
    answer = cnt
    return answer