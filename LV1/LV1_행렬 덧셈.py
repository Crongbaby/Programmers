# -*- coding: utf-8 -*-
"""연습용.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cI7vkqxs5WMh_9o0NpCARdKUabvS0EOe
"""

import numpy as np
def solution(arr1, arr2):
  new_arr1 = np.array(arr1); new_arr2 = np.array(arr2)
  result = new_arr1+new_arr2;
  return result.tolist()
  
print(solution([[1,2],[2,3]],[[3,4],[5,6]]))
print(solution([[1],[2]],	[[3],[4]]))

#다른 사람의 풀이1...리스트를 이렇게 이용할 수 있음음
def sumMatrix(A,B):
    #리스트 안에 리스트로 접근해서 거기 요소끼리 더하기 -> 내가 원하던 방향향
    answer = [[c + d for c, d in zip(a, b)] for a, b in zip(A,B)]
    return answer

#다른 사람의 풀이2...
def sumMatrix(A,B):
    return [list(map(sum, zip(*x))) for x in zip(A, B)]

#다른 사람의 풀이3...
def sumMatrix(A,B):
    answer = [[A[i][j] + B[i][j] for j in range(len(A[0]))] for i in range(len(A))]